seqlogoCode = """
import seqlogo
# make seqlogo PWM object
seq_pwm = seqlogo.Pwm(pwm)
# Convert to ppm needed for plotting
seq_ppm = seqlogo.Ppm(seqlogo.pwm2ppm(seq_pwm))
seqlogo.seqlogo(seq_ppm, ic_scale = True, format = 'png', size = 'medium')
    """
    
    jupy = nbformat.v4.new_notebook()
    pwmString = """pwm = """ + str(repr(np.array(pwm))) + '\n' + seqlogoCode
    print(pwmString)
    
    jupy['cells'] = [nbformat.v4.new_code_cell(pwmString)]
    nbformat.write(jupy,'Test.ipynb')
    
    # jupy['cells'] = [nbformat.v4.new_code_cell(seqlogoCode)]
    # nbformat.write(jupy,'Test.ipynb')

    # def getPFM(sequences):
#     nucs = {"A": 0, "C": 1, "G": 2, "T": 3}
#     pfm = np.zeros((4, len(sequences[0])))
    
#     for i in range (len(sequences)):
#         for j in range(len(sequences[0])):
#             pfm[nucs[sequences[i][j]]][j] += 1
#     return pfm

def getPFM(sequencesDict):
    nucs = {"A": 0, "C": 1, "G": 2, "T": 3}
    pfm = np.zeros((4, len(list(sequencesDict.keys())[0])))
    
    for sequence in sequencesDict.keys():
        for j in range(len(sequence)):
            pfm[nucs[sequence[j]]][j] += sequencesDict[sequence]
        
    return pfm

    def getMotifDict(seqsDict, n):
    motifDict = {}
    
    for seq in seqsDict.keys():
        count = seqsDict[seq]
        for j in range(len(seq)-n+1):
            motif = seq[j:j+n]
            motifDict[motif] = count
            
    return motifDict